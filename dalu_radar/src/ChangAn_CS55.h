/** CAN message encoder/decoder: automatically generated - do not edit
  * Generated by dbcc: See https://github.com/howerj/dbcc */
#ifndef CHANGAN_CS55_H
#define CHANGAN_CS55_H

#include <stdint.h>
#include <stdio.h>

#ifdef __cplusplus
extern "C" { 
#endif

#ifndef PREPACK
#define PREPACK
#endif

#ifndef POSTPACK
#define POSTPACK
#endif

#ifndef DBCC_TIME_STAMP
#define DBCC_TIME_STAMP
typedef uint32_t dbcc_time_stamp_t; /* Time stamp for message; you decide on units */
#endif

#ifndef DBCC_STATUS_ENUM
#define DBCC_STATUS_ENUM
typedef enum {
	DBCC_SIG_STAT_UNINITIALIZED_E = 0, /* Message never sent/received */
	DBCC_SIG_STAT_OK_E            = 1, /* Message ok */
	DBCC_SIG_STAT_ERROR_E         = 2, /* Encode/Decode/Timestamp/Any error */
} dbcc_signal_status_e;
#endif

typedef PREPACK struct {
	uint16_t Wheel_Speed_RR_Data; /* scaling 0.1, offset 0.0, units km/h  */
	uint16_t Wheel_Speed_RL_Data; /* scaling 0.1, offset 0.0, units km/h  */
	uint16_t Wheel_Speed_FR_Data; /* scaling 0.1, offset 0.0, units km/h  */
	uint16_t Wheel_Speed_FL_Data; /* scaling 0.1, offset 0.0, units km/h  */
	uint8_t Wheel_Speed_RR_Direction; /* scaling 1.0, offset 0.0, units none  */
	uint8_t Wheel_Speed_RL_Direction; /* scaling 1.0, offset 0.0, units none  */
	uint8_t Wheel_Speed_FR_Direction; /* scaling 1.0, offset 0.0, units none  */
	uint8_t Wheel_Speed_FL_Direction; /* scaling 1.0, offset 0.0, units none  */
	uint8_t Wheel_Speed_RR_Valid_Data; /* scaling 1.0, offset 0.0, units none  */
	uint8_t Wheel_Speed_RL_Valid_Data; /* scaling 1.0, offset 0.0, units none  */
	uint8_t Wheel_Speed_FR_Valid_Data; /* scaling 1.0, offset 0.0, units none  */
	uint8_t Wheel_Speed_FL_Valid_Data; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x208_P_Can2_208_t;

typedef PREPACK struct {
	uint16_t ESP_VehicleSpeed; /* scaling 0.1, offset 0.0, units km/h  */
} POSTPACK can_0x218_EPBi_218_t;

typedef PREPACK struct {
	uint8_t ACC_ACCTargetAcceleration; /* scaling 0.1, offset -5.0, units m/s2  */
	uint8_t ACC_CheckSum_id24E; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ACC_RollingCounter_id24E; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ACC_DecToStop; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ACC_CDDAxEna; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ACC_Driveoff_Request; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x24e_ACC_24E_t;

typedef PREPACK struct {
	uint8_t EMS_QECACC; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x255_EMS_255_t;

typedef PREPACK struct {
	uint8_t Wheel_Speed_RR_Pulse; /* scaling 1.0, offset 0.0, units none  */
	uint8_t Wheel_Speed_RL_Pulse; /* scaling 1.0, offset 0.0, units none  */
	uint8_t Wheel_Speed_FR_Pulse; /* scaling 1.0, offset 0.0, units none  */
	uint8_t Wheel_Speed_FL_Pulse; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x258_P_Can1_258_t;

typedef PREPACK struct {
	uint16_t ACC_AEBTargetDeceleration; /* scaling 0.0, offset -16.0, units m/s2  */
	uint16_t ACC_ACCTrqReq; /* scaling 1.0, offset 0.0, units NM  */
	uint8_t ACC_CheckSum_id25E; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ACC_RollingCounter_id25E; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ACC_AEBDecCtrlAvail; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ACC_ACCTrqReqEna; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x25e_ACC_25E_t;

typedef PREPACK struct {
	uint16_t ESP_YawRate; /* scaling 0.0, offset -81.9, units deg/s  */
	uint8_t ESP_YawRate_Valid; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x278_EPBi_278_t;

typedef PREPACK struct {
	uint8_t EPS_APA_EpasFAILED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t EPS_APA_ControlFeedback; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x2a0_EPS_2A0_t;

typedef PREPACK struct {
	uint16_t EPS_SteeringAngle; /* scaling 0.1, offset -1228.7, units degree  */
} POSTPACK can_0x2a1_EPS_2A1_t;

typedef PREPACK struct {
	int16_t APA_SteeringAngleReq; /* scaling 0.1, offset 0.0, units degree  */
	uint8_t APA_CheckSum; /* scaling 1.0, offset 0.0, units none  */
	uint8_t APA_RollingCounter; /* scaling 1.0, offset 0.0, units none  */
	uint8_t APA_StrAngReqType; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x2a8_APA_ParkNoticeInfo_2A8_t;

typedef PREPACK struct {
	uint8_t ACC_CheckSum_id35E; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ACC_RollingCounter_id35E; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x35e_ACC_35E_t;

typedef PREPACK struct {
	dbcc_time_stamp_t can_0x208_P_Can2_208_time_stamp_rx;
	dbcc_time_stamp_t can_0x218_EPBi_218_time_stamp_rx;
	dbcc_time_stamp_t can_0x24e_ACC_24E_time_stamp_rx;
	dbcc_time_stamp_t can_0x255_EMS_255_time_stamp_rx;
	dbcc_time_stamp_t can_0x258_P_Can1_258_time_stamp_rx;
	dbcc_time_stamp_t can_0x25e_ACC_25E_time_stamp_rx;
	dbcc_time_stamp_t can_0x278_EPBi_278_time_stamp_rx;
	dbcc_time_stamp_t can_0x2a0_EPS_2A0_time_stamp_rx;
	dbcc_time_stamp_t can_0x2a1_EPS_2A1_time_stamp_rx;
	dbcc_time_stamp_t can_0x2a8_APA_ParkNoticeInfo_2A8_time_stamp_rx;
	dbcc_time_stamp_t can_0x35e_ACC_35E_time_stamp_rx;
	unsigned can_0x208_P_Can2_208_status : 2;
	unsigned can_0x208_P_Can2_208_tx : 1;
	unsigned can_0x208_P_Can2_208_rx : 1;
	unsigned can_0x218_EPBi_218_status : 2;
	unsigned can_0x218_EPBi_218_tx : 1;
	unsigned can_0x218_EPBi_218_rx : 1;
	unsigned can_0x24e_ACC_24E_status : 2;
	unsigned can_0x24e_ACC_24E_tx : 1;
	unsigned can_0x24e_ACC_24E_rx : 1;
	unsigned can_0x255_EMS_255_status : 2;
	unsigned can_0x255_EMS_255_tx : 1;
	unsigned can_0x255_EMS_255_rx : 1;
	unsigned can_0x258_P_Can1_258_status : 2;
	unsigned can_0x258_P_Can1_258_tx : 1;
	unsigned can_0x258_P_Can1_258_rx : 1;
	unsigned can_0x25e_ACC_25E_status : 2;
	unsigned can_0x25e_ACC_25E_tx : 1;
	unsigned can_0x25e_ACC_25E_rx : 1;
	unsigned can_0x278_EPBi_278_status : 2;
	unsigned can_0x278_EPBi_278_tx : 1;
	unsigned can_0x278_EPBi_278_rx : 1;
	unsigned can_0x2a0_EPS_2A0_status : 2;
	unsigned can_0x2a0_EPS_2A0_tx : 1;
	unsigned can_0x2a0_EPS_2A0_rx : 1;
	unsigned can_0x2a1_EPS_2A1_status : 2;
	unsigned can_0x2a1_EPS_2A1_tx : 1;
	unsigned can_0x2a1_EPS_2A1_rx : 1;
	unsigned can_0x2a8_APA_ParkNoticeInfo_2A8_status : 2;
	unsigned can_0x2a8_APA_ParkNoticeInfo_2A8_tx : 1;
	unsigned can_0x2a8_APA_ParkNoticeInfo_2A8_rx : 1;
	unsigned can_0x35e_ACC_35E_status : 2;
	unsigned can_0x35e_ACC_35E_tx : 1;
	unsigned can_0x35e_ACC_35E_rx : 1;
	can_0x208_P_Can2_208_t can_0x208_P_Can2_208;
	can_0x218_EPBi_218_t can_0x218_EPBi_218;
	can_0x24e_ACC_24E_t can_0x24e_ACC_24E;
	can_0x255_EMS_255_t can_0x255_EMS_255;
	can_0x258_P_Can1_258_t can_0x258_P_Can1_258;
	can_0x25e_ACC_25E_t can_0x25e_ACC_25E;
	can_0x278_EPBi_278_t can_0x278_EPBi_278;
	can_0x2a0_EPS_2A0_t can_0x2a0_EPS_2A0;
	can_0x2a1_EPS_2A1_t can_0x2a1_EPS_2A1;
	can_0x2a8_APA_ParkNoticeInfo_2A8_t can_0x2a8_APA_ParkNoticeInfo_2A8;
	can_0x35e_ACC_35E_t can_0x35e_ACC_35E;
} POSTPACK can_obj_changan_cs55_h_t;

int unpack_message(can_obj_changan_cs55_h_t *o, const unsigned long id, uint64_t data, uint8_t dlc, dbcc_time_stamp_t time_stamp);
int pack_message(can_obj_changan_cs55_h_t *o, const unsigned long id, uint64_t *data);
int print_message(const can_obj_changan_cs55_h_t *o, const unsigned long id, FILE *output);

int decode_can_0x208_Wheel_Speed_RR_Data(const can_obj_changan_cs55_h_t *o, double *out);
int encode_can_0x208_Wheel_Speed_RR_Data(can_obj_changan_cs55_h_t *o, double in);
int decode_can_0x208_Wheel_Speed_RL_Data(const can_obj_changan_cs55_h_t *o, double *out);
int encode_can_0x208_Wheel_Speed_RL_Data(can_obj_changan_cs55_h_t *o, double in);
int decode_can_0x208_Wheel_Speed_FR_Data(const can_obj_changan_cs55_h_t *o, double *out);
int encode_can_0x208_Wheel_Speed_FR_Data(can_obj_changan_cs55_h_t *o, double in);
int decode_can_0x208_Wheel_Speed_FL_Data(const can_obj_changan_cs55_h_t *o, double *out);
int encode_can_0x208_Wheel_Speed_FL_Data(can_obj_changan_cs55_h_t *o, double in);
int decode_can_0x208_Wheel_Speed_RR_Direction(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x208_Wheel_Speed_RR_Direction(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x208_Wheel_Speed_RL_Direction(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x208_Wheel_Speed_RL_Direction(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x208_Wheel_Speed_FR_Direction(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x208_Wheel_Speed_FR_Direction(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x208_Wheel_Speed_FL_Direction(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x208_Wheel_Speed_FL_Direction(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x208_Wheel_Speed_RR_Valid_Data(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x208_Wheel_Speed_RR_Valid_Data(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x208_Wheel_Speed_RL_Valid_Data(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x208_Wheel_Speed_RL_Valid_Data(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x208_Wheel_Speed_FR_Valid_Data(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x208_Wheel_Speed_FR_Valid_Data(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x208_Wheel_Speed_FL_Valid_Data(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x208_Wheel_Speed_FL_Valid_Data(can_obj_changan_cs55_h_t *o, uint8_t in);


int decode_can_0x218_ESP_VehicleSpeed(const can_obj_changan_cs55_h_t *o, double *out);
int encode_can_0x218_ESP_VehicleSpeed(can_obj_changan_cs55_h_t *o, double in);


int decode_can_0x24e_ACC_ACCTargetAcceleration(const can_obj_changan_cs55_h_t *o, double *out);
int encode_can_0x24e_ACC_ACCTargetAcceleration(can_obj_changan_cs55_h_t *o, double in);
int decode_can_0x24e_ACC_CheckSum_id24E(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x24e_ACC_CheckSum_id24E(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x24e_ACC_RollingCounter_id24E(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x24e_ACC_RollingCounter_id24E(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x24e_ACC_DecToStop(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x24e_ACC_DecToStop(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x24e_ACC_CDDAxEna(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x24e_ACC_CDDAxEna(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x24e_ACC_Driveoff_Request(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x24e_ACC_Driveoff_Request(can_obj_changan_cs55_h_t *o, uint8_t in);


int decode_can_0x255_EMS_QECACC(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x255_EMS_QECACC(can_obj_changan_cs55_h_t *o, uint8_t in);


int decode_can_0x258_Wheel_Speed_RR_Pulse(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x258_Wheel_Speed_RR_Pulse(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x258_Wheel_Speed_RL_Pulse(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x258_Wheel_Speed_RL_Pulse(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x258_Wheel_Speed_FR_Pulse(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x258_Wheel_Speed_FR_Pulse(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x258_Wheel_Speed_FL_Pulse(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x258_Wheel_Speed_FL_Pulse(can_obj_changan_cs55_h_t *o, uint8_t in);


int decode_can_0x25e_ACC_AEBTargetDeceleration(const can_obj_changan_cs55_h_t *o, double *out);
int encode_can_0x25e_ACC_AEBTargetDeceleration(can_obj_changan_cs55_h_t *o, double in);
int decode_can_0x25e_ACC_ACCTrqReq(const can_obj_changan_cs55_h_t *o, uint16_t *out);
int encode_can_0x25e_ACC_ACCTrqReq(can_obj_changan_cs55_h_t *o, uint16_t in);
int decode_can_0x25e_ACC_CheckSum_id25E(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x25e_ACC_CheckSum_id25E(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x25e_ACC_RollingCounter_id25E(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x25e_ACC_RollingCounter_id25E(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x25e_ACC_AEBDecCtrlAvail(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x25e_ACC_AEBDecCtrlAvail(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x25e_ACC_ACCTrqReqEna(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x25e_ACC_ACCTrqReqEna(can_obj_changan_cs55_h_t *o, uint8_t in);


int decode_can_0x278_ESP_YawRate(const can_obj_changan_cs55_h_t *o, double *out);
int encode_can_0x278_ESP_YawRate(can_obj_changan_cs55_h_t *o, double in);
int decode_can_0x278_ESP_YawRate_Valid(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x278_ESP_YawRate_Valid(can_obj_changan_cs55_h_t *o, uint8_t in);


int decode_can_0x2a0_EPS_APA_EpasFAILED(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x2a0_EPS_APA_EpasFAILED(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x2a0_EPS_APA_ControlFeedback(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x2a0_EPS_APA_ControlFeedback(can_obj_changan_cs55_h_t *o, uint8_t in);


int decode_can_0x2a1_EPS_SteeringAngle(const can_obj_changan_cs55_h_t *o, double *out);
int encode_can_0x2a1_EPS_SteeringAngle(can_obj_changan_cs55_h_t *o, double in);


int decode_can_0x2a8_APA_SteeringAngleReq(const can_obj_changan_cs55_h_t *o, double *out);
int encode_can_0x2a8_APA_SteeringAngleReq(can_obj_changan_cs55_h_t *o, double in);
int decode_can_0x2a8_APA_CheckSum(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x2a8_APA_CheckSum(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x2a8_APA_RollingCounter(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x2a8_APA_RollingCounter(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x2a8_APA_StrAngReqType(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x2a8_APA_StrAngReqType(can_obj_changan_cs55_h_t *o, uint8_t in);


int decode_can_0x35e_ACC_CheckSum_id35E(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x35e_ACC_CheckSum_id35E(can_obj_changan_cs55_h_t *o, uint8_t in);
int decode_can_0x35e_ACC_RollingCounter_id35E(const can_obj_changan_cs55_h_t *o, uint8_t *out);
int encode_can_0x35e_ACC_RollingCounter_id35E(can_obj_changan_cs55_h_t *o, uint8_t in);


#ifdef __cplusplus
} 
#endif

#endif
