// Generated by gencpp from file robot_msgs/Speek.msg
// DO NOT EDIT!


#ifndef ROBOT_MSGS_MESSAGE_SPEEK_H
#define ROBOT_MSGS_MESSAGE_SPEEK_H

#include <ros/service_traits.h>


#include <robot_msgs/SpeekRequest.h>
#include <robot_msgs/SpeekResponse.h>


namespace robot_msgs
{

struct Speek
{

typedef SpeekRequest Request;
typedef SpeekResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Speek
} // namespace robot_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::robot_msgs::Speek > {
  static const char* value()
  {
    return "ffe2ed0131a0c7d14cc080adec6a4104";
  }

  static const char* value(const ::robot_msgs::Speek&) { return value(); }
};

template<>
struct DataType< ::robot_msgs::Speek > {
  static const char* value()
  {
    return "robot_msgs/Speek";
  }

  static const char* value(const ::robot_msgs::Speek&) { return value(); }
};


// service_traits::MD5Sum< ::robot_msgs::SpeekRequest> should match 
// service_traits::MD5Sum< ::robot_msgs::Speek > 
template<>
struct MD5Sum< ::robot_msgs::SpeekRequest>
{
  static const char* value()
  {
    return MD5Sum< ::robot_msgs::Speek >::value();
  }
  static const char* value(const ::robot_msgs::SpeekRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::robot_msgs::SpeekRequest> should match 
// service_traits::DataType< ::robot_msgs::Speek > 
template<>
struct DataType< ::robot_msgs::SpeekRequest>
{
  static const char* value()
  {
    return DataType< ::robot_msgs::Speek >::value();
  }
  static const char* value(const ::robot_msgs::SpeekRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::robot_msgs::SpeekResponse> should match 
// service_traits::MD5Sum< ::robot_msgs::Speek > 
template<>
struct MD5Sum< ::robot_msgs::SpeekResponse>
{
  static const char* value()
  {
    return MD5Sum< ::robot_msgs::Speek >::value();
  }
  static const char* value(const ::robot_msgs::SpeekResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::robot_msgs::SpeekResponse> should match 
// service_traits::DataType< ::robot_msgs::Speek > 
template<>
struct DataType< ::robot_msgs::SpeekResponse>
{
  static const char* value()
  {
    return DataType< ::robot_msgs::Speek >::value();
  }
  static const char* value(const ::robot_msgs::SpeekResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROBOT_MSGS_MESSAGE_SPEEK_H
